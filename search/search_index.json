{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 1. Theoretical Foundation: Deriving the Governing Equations of Motion In projectile motion, we assume that the only force acting on the projectile is gravity, and we ignore air resistance. This makes the problem relatively simple, allowing us to use the principles of classical mechanics to derive the equations of motion. Basic Kinematic Equations Projectile motion is governed by Newton's second law in both the horizontal and vertical directions. We break the motion into two components: horizontal and vertical. Let the following be the initial conditions: Initial velocity: \\(v_0\\) Angle of projection: \\(\\theta\\) Gravitational acceleration: \\(g\\) Initial height: \\(h_0 = 0\\) (assuming it\u2019s launched from the ground) We can resolve the initial velocity into horizontal and vertical components: [ v_{0x} = v_0 \\cos(\\theta) ] [ v_{0y} = v_0 \\sin(\\theta) ] In the absence of air resistance, the horizontal velocity \\(v_{x}\\) remains constant, while the vertical velocity \\(v_{y}\\) is affected by gravity. Horizontal motion (x-direction): \\[ x(t) = v_{0x} t = v_0 \\cos(\\theta) t \\] Vertical motion (y-direction): \\[ y(t) = v_{0y} t - \\frac{1}{2} g t^2 = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] The projectile will hit the ground when \\(y(t) = 0\\) . Solving for the time of flight \\(T\\) when \\(y(T) = 0\\) , we get the following quadratic equation: \\[ 0 = v_0 \\sin(\\theta) T - \\frac{1}{2} g T^2 \\] Solving for \\(T\\) yields the time of flight: [ T = \\frac{2 v_0 \\sin(\\theta)}{g} ] Range of the Projectile The range of the projectile, \\(R\\) , is the horizontal distance traveled when the projectile lands. Using the time of flight \\(T\\) , the range is given by: [ R = x(T) = v_0 \\cos(\\theta) T ] Substitute the expression for \\(T\\) : [ R = v_0 \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} ] [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ] This is the equation for the range of the projectile as a function of the angle of projection \\(\\theta\\) . The range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs at \\(\\theta = 45^\\circ\\) . 2. Analysis of the Range The relationship between the range \\(R\\) and the angle of projection \\(\\theta\\) can be analyzed as follows: At \\(\\theta = 0^\\circ\\) or \\(\\theta = 90^\\circ\\) : The projectile travels vertically or horizontally, resulting in no range because the projectile either doesn\u2019t move horizontally or falls back to the ground immediately. At \\(\\theta = 45^\\circ\\) : The range is maximized since \\(\\sin(90^\\circ) = 1\\) . At other angles: The range will be less than the maximum value, and the range curve follows the shape of the \\(\\sin(2\\theta)\\) function. We can also see from the equation that the range depends on the initial velocity \\(v_0\\) and gravitational acceleration \\(g\\) : Initial velocity ( \\(v_0\\) ): The range increases with the square of the initial velocity. This means a faster launch increases the range. Gravitational acceleration ( \\(g\\) ): The range decreases with increasing gravity, as a stronger gravitational field causes the projectile to fall more quickly. 3. Practical Applications This model can be adapted to real-world situations where factors such as air resistance, uneven terrain, or varying launch heights must be considered. Air resistance: In reality, air resistance affects the trajectory of the projectile, slowing it down and reducing its range. This can be modeled using drag forces, which are typically proportional to the square of the velocity. Uneven terrain: If the projectile is launched from a height or the landing surface is elevated or lowered, the equations can be modified to account for this change in initial height. Sports and engineering: In sports like soccer or basketball, understanding the optimal launch angle for maximum range is crucial. Engineers also apply these principles when designing rockets or ballistic systems. 4. Implementation: Numerical Simulation To simulate projectile motion and visualize the range as a function of the angle of projection, we can write a Python script that numerically integrates the equations of motion and computes the range for different launch angles. Here is an implementation in Python: import numpy as np import matplotlib.pyplot as plt def projectile_motion(v0, angle, g=9.81): # Initial velocity components angle_rad = np.radians(angle) v0x = v0 * np.cos(angle_rad) v0y = v0 * np.sin(angle_rad) # Time of flight T = (2 * v0y) / g # Time points t = np.linspace(0, T, num=500) # Positions in x and y x = v0x * t y = v0y * t - 0.5 * g * t**2 return x, y, T def range_of_projectile(v0, g=9.81): angles = np.linspace(0, 90, 91) # From 0 to 90 degrees ranges = [] for angle in angles: x, y, T = projectile_motion(v0, angle, g) ranges.append(x[-1]) # Range is the final x position return angles, ranges # Parameters v0 = 30 # Initial velocity in m/s # Calculate range as a function of angle angles, ranges = range_of_projectile(v0) # Plotting the results plt.figure(figsize=(10,6)) plt.plot(angles, ranges) plt.title(\"Range vs. Angle of Projection\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.show() 5. Limitations of the Idealized Model and Realistic Considerations The idealized model assumes that air resistance is negligible and that the terrain is flat. In real-world situations: Air resistance reduces the range of a projectile, especially at higher velocities and with larger surface areas. Wind and other atmospheric conditions can significantly affect the trajectory. Uneven terrain and varying launch heights require adjustments to the basic equations, potentially using numerical methods or more complex models. To incorporate air resistance, one can model the drag force as: \\[ F_{\\text{drag}} = \\frac{1}{2} C_d \\rho A v^2 \\] where \\(C_d\\) is the drag coefficient, \\(\\rho\\) is the air density, \\(A\\) is the cross-sectional area of the projectile, and \\(v\\) is the velocity. By solving the differential equations including drag, the motion can be simulated more realistically.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation-deriving-the-governing-equations-of-motion","text":"In projectile motion, we assume that the only force acting on the projectile is gravity, and we ignore air resistance. This makes the problem relatively simple, allowing us to use the principles of classical mechanics to derive the equations of motion.","title":"1. Theoretical Foundation: Deriving the Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#basic-kinematic-equations","text":"Projectile motion is governed by Newton's second law in both the horizontal and vertical directions. We break the motion into two components: horizontal and vertical. Let the following be the initial conditions: Initial velocity: \\(v_0\\) Angle of projection: \\(\\theta\\) Gravitational acceleration: \\(g\\) Initial height: \\(h_0 = 0\\) (assuming it\u2019s launched from the ground) We can resolve the initial velocity into horizontal and vertical components: [ v_{0x} = v_0 \\cos(\\theta) ] [ v_{0y} = v_0 \\sin(\\theta) ] In the absence of air resistance, the horizontal velocity \\(v_{x}\\) remains constant, while the vertical velocity \\(v_{y}\\) is affected by gravity.","title":"Basic Kinematic Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#horizontal-motion-x-direction","text":"\\[ x(t) = v_{0x} t = v_0 \\cos(\\theta) t \\]","title":"Horizontal motion (x-direction):"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#vertical-motion-y-direction","text":"\\[ y(t) = v_{0y} t - \\frac{1}{2} g t^2 = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] The projectile will hit the ground when \\(y(t) = 0\\) . Solving for the time of flight \\(T\\) when \\(y(T) = 0\\) , we get the following quadratic equation: \\[ 0 = v_0 \\sin(\\theta) T - \\frac{1}{2} g T^2 \\] Solving for \\(T\\) yields the time of flight: [ T = \\frac{2 v_0 \\sin(\\theta)}{g} ]","title":"Vertical motion (y-direction):"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-of-the-projectile","text":"The range of the projectile, \\(R\\) , is the horizontal distance traveled when the projectile lands. Using the time of flight \\(T\\) , the range is given by: [ R = x(T) = v_0 \\cos(\\theta) T ] Substitute the expression for \\(T\\) : [ R = v_0 \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} ] [ R = \\frac{v_0^2 \\sin(2\\theta)}{g} ] This is the equation for the range of the projectile as a function of the angle of projection \\(\\theta\\) . The range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs at \\(\\theta = 45^\\circ\\) .","title":"Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"The relationship between the range \\(R\\) and the angle of projection \\(\\theta\\) can be analyzed as follows: At \\(\\theta = 0^\\circ\\) or \\(\\theta = 90^\\circ\\) : The projectile travels vertically or horizontally, resulting in no range because the projectile either doesn\u2019t move horizontally or falls back to the ground immediately. At \\(\\theta = 45^\\circ\\) : The range is maximized since \\(\\sin(90^\\circ) = 1\\) . At other angles: The range will be less than the maximum value, and the range curve follows the shape of the \\(\\sin(2\\theta)\\) function. We can also see from the equation that the range depends on the initial velocity \\(v_0\\) and gravitational acceleration \\(g\\) : Initial velocity ( \\(v_0\\) ): The range increases with the square of the initial velocity. This means a faster launch increases the range. Gravitational acceleration ( \\(g\\) ): The range decreases with increasing gravity, as a stronger gravitational field causes the projectile to fall more quickly.","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"This model can be adapted to real-world situations where factors such as air resistance, uneven terrain, or varying launch heights must be considered. Air resistance: In reality, air resistance affects the trajectory of the projectile, slowing it down and reducing its range. This can be modeled using drag forces, which are typically proportional to the square of the velocity. Uneven terrain: If the projectile is launched from a height or the landing surface is elevated or lowered, the equations can be modified to account for this change in initial height. Sports and engineering: In sports like soccer or basketball, understanding the optimal launch angle for maximum range is crucial. Engineers also apply these principles when designing rockets or ballistic systems.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation-numerical-simulation","text":"To simulate projectile motion and visualize the range as a function of the angle of projection, we can write a Python script that numerically integrates the equations of motion and computes the range for different launch angles. Here is an implementation in Python: import numpy as np import matplotlib.pyplot as plt def projectile_motion(v0, angle, g=9.81): # Initial velocity components angle_rad = np.radians(angle) v0x = v0 * np.cos(angle_rad) v0y = v0 * np.sin(angle_rad) # Time of flight T = (2 * v0y) / g # Time points t = np.linspace(0, T, num=500) # Positions in x and y x = v0x * t y = v0y * t - 0.5 * g * t**2 return x, y, T def range_of_projectile(v0, g=9.81): angles = np.linspace(0, 90, 91) # From 0 to 90 degrees ranges = [] for angle in angles: x, y, T = projectile_motion(v0, angle, g) ranges.append(x[-1]) # Range is the final x position return angles, ranges # Parameters v0 = 30 # Initial velocity in m/s # Calculate range as a function of angle angles, ranges = range_of_projectile(v0) # Plotting the results plt.figure(figsize=(10,6)) plt.plot(angles, ranges) plt.title(\"Range vs. Angle of Projection\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.show()","title":"4. Implementation: Numerical Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-limitations-of-the-idealized-model-and-realistic-considerations","text":"The idealized model assumes that air resistance is negligible and that the terrain is flat. In real-world situations: Air resistance reduces the range of a projectile, especially at higher velocities and with larger surface areas. Wind and other atmospheric conditions can significantly affect the trajectory. Uneven terrain and varying launch heights require adjustments to the basic equations, potentially using numerical methods or more complex models. To incorporate air resistance, one can model the drag force as: \\[ F_{\\text{drag}} = \\frac{1}{2} C_d \\rho A v^2 \\] where \\(C_d\\) is the drag coefficient, \\(\\rho\\) is the air density, \\(A\\) is the cross-sectional area of the projectile, and \\(v\\) is the velocity. By solving the differential equations including drag, the motion can be simulated more realistically.","title":"5. Limitations of the Idealized Model and Realistic Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}